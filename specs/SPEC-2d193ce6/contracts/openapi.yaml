openapi: 3.0.3
info:
  title: Push Notification API
  description: |
    REST API for cross-platform push notification delivery system.
    Supports iOS (APNs) and Android (FCM) push notifications for Unity/Unreal Engine games.
  version: 0.1.0
  contact:
    name: API Support
  license:
    name: MIT

servers:
  - url: http://localhost:3000/api/v1
    description: Local development server
  - url: https://api.example.com/api/v1
    description: Production server

security:
  - ApiKeyAuth: []

paths:
  /tokens:
    post:
      summary: Register device token
      description: Register a new device token for push notifications
      operationId: registerToken
      tags:
        - Device Tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterTokenRequest'
      responses:
        '201':
          description: Token registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /tokens/{token}:
    put:
      summary: Update device token
      description: Update an existing device token
      operationId: updateToken
      tags:
        - Device Tokens
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
          description: Device token to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTokenRequest'
      responses:
        '200':
          description: Token updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'

    delete:
      summary: Delete device token
      description: Delete a device token (e.g., on app uninstall)
      operationId: deleteToken
      tags:
        - Device Tokens
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
          description: Device token to delete
      responses:
        '200':
          description: Token deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /notifications:
    post:
      summary: Send push notification
      description: Send push notification to one or more devices
      operationId: sendNotification
      tags:
        - Notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendNotificationRequest'
      responses:
        '202':
          description: Notification accepted for delivery
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /notifications/{id}:
    get:
      summary: Get notification delivery status
      description: Retrieve delivery status for a previously sent notification
      operationId: getNotificationStatus
      tags:
        - Notifications
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Notification ID
      responses:
        '200':
          description: Notification status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationStatusResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication

  schemas:
    RegisterTokenRequest:
      type: object
      required:
        - token
        - platform
      properties:
        token:
          type: string
          description: Device token from APNs or FCM
          example: "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2"
        platform:
          type: string
          enum: [iOS, Android]
          description: Device platform
          example: iOS
        playerAccountId:
          type: string
          description: Optional player account identifier
          example: "player-12345"

    UpdateTokenRequest:
      type: object
      properties:
        playerAccountId:
          type: string
          description: Updated player account identifier
          example: "player-67890"

    SendNotificationRequest:
      type: object
      required:
        - tokens
        - title
        - body
      properties:
        tokens:
          type: array
          items:
            type: string
          minItems: 1
          maxItems: 1000
          description: Array of device tokens to send notification to
          example: ["token1", "token2"]
        title:
          type: string
          minLength: 1
          maxLength: 100
          description: Notification title
          example: "New Mission Available!"
        body:
          type: string
          minLength: 1
          maxLength: 500
          description: Notification body text
          example: "Check out the new daily mission in the game"
        imageUrl:
          type: string
          format: uri
          description: Optional image URL for rich notification
          example: "https://example.com/images/mission.png"
        customData:
          type: object
          description: Optional custom data (deep link, etc.)
          example:
            action: "open_mission"
            missionId: "123"

    DeviceResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Device record ID
          example: "a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6"
        token:
          type: string
          description: Device token
          example: "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2"
        platform:
          type: string
          enum: [iOS, Android]
          description: Device platform
          example: iOS
        playerAccountId:
          type: string
          nullable: true
          description: Player account identifier
          example: "player-12345"
        createdAt:
          type: string
          format: date-time
          description: Registration timestamp
          example: "2025-10-30T12:00:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
          example: "2025-10-30T12:30:00Z"

    NotificationResponse:
      type: object
      properties:
        notificationId:
          type: string
          format: uuid
          description: Notification ID
          example: "b2c3d4e5-f6g7-h8i9-j0k1-l2m3n4o5p6q7"
        deliveryLogs:
          type: array
          items:
            type: object
            properties:
              deviceId:
                type: string
                format: uuid
                description: Device ID
                example: "a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6"
              status:
                type: string
                enum: [pending, success, failed]
                description: Delivery status
                example: pending

    NotificationStatusResponse:
      type: object
      properties:
        notificationId:
          type: string
          format: uuid
          description: Notification ID
          example: "b2c3d4e5-f6g7-h8i9-j0k1-l2m3n4o5p6q7"
        title:
          type: string
          description: Notification title
          example: "New Mission Available!"
        body:
          type: string
          description: Notification body
          example: "Check out the new daily mission in the game"
        createdAt:
          type: string
          format: date-time
          description: Notification creation timestamp
          example: "2025-10-30T12:00:00Z"
        deliveryLogs:
          type: array
          items:
            type: object
            properties:
              deviceId:
                type: string
                format: uuid
                description: Device ID
                example: "a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6"
              status:
                type: string
                enum: [pending, success, failed]
                description: Delivery status
                example: success
              errorCode:
                type: string
                nullable: true
                description: Error code if delivery failed
                example: "INVALID_TOKEN"
              errorMessage:
                type: string
                nullable: true
                description: Error message if delivery failed
                example: "Device token format is invalid for iOS platform"
              sentAt:
                type: string
                format: date-time
                description: Send attempt timestamp
                example: "2025-10-30T12:00:05Z"
              deliveredAt:
                type: string
                format: date-time
                nullable: true
                description: Successful delivery timestamp
                example: "2025-10-30T12:00:08Z"

    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              description: Error code
              example: "INVALID_TOKEN"
            message:
              type: string
              description: Human-readable error message
              example: "Device token format is invalid for iOS platform"
            details:
              type: object
              description: Additional error context
              example:
                token: "invalid-token"
                expectedFormat: "64-character hexadecimal string"

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error:
              code: "VALIDATION_ERROR"
              message: "Request validation failed"
              details:
                field: "title"
                issue: "Title is required"

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error:
              code: "UNAUTHORIZED"
              message: "Invalid or missing API key"

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error:
              code: "NOT_FOUND"
              message: "Resource not found"

    TooManyRequests:
      description: Too many requests
      headers:
        Retry-After:
          schema:
            type: integer
          description: Seconds to wait before retrying
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error:
              code: "RATE_LIMIT_EXCEEDED"
              message: "Rate limit exceeded. Please retry after 60 seconds"
